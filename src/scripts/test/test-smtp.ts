import { 
  verifySmtpConnection, 
  sendEmail, 
  emailTemplates 
} from '../../config/smtp-email';
import dotenv from 'dotenv';

// Charger les variables d'environnement
dotenv.config();

/**
 * Script de test pour la configuration SMTP Gmail
 */
async function testSmtpConnection() {
  console.log('üß™ Test de la configuration SMTP Gmail...\n');

  try {
    // 1. V√©rifier les variables d'environnement
    console.log('1Ô∏è‚É£ V√©rification des variables d\'environnement...');
    
    if (!process.env.GMAIL_USER) {
      throw new Error('‚ùå Variable GMAIL_USER manquante dans .env');
    }
    
    if (!process.env.GMAIL_APP_PASSWORD) {
      throw new Error('‚ùå Variable GMAIL_APP_PASSWORD manquante dans .env');
    }
    
    console.log(`‚úÖ GMAIL_USER: ${process.env.GMAIL_USER}`);
    console.log(`‚úÖ GMAIL_APP_PASSWORD: ${'*'.repeat(process.env.GMAIL_APP_PASSWORD.length)}`);
    console.log(`‚úÖ APP_NAME: ${process.env.APP_NAME || 'Synkrone (par d√©faut)'}`);
    console.log();

    // 2. Tester la connexion SMTP
    console.log('2Ô∏è‚É£ Test de connexion SMTP...');
    const connectionOk = await verifySmtpConnection();
    
    if (!connectionOk) {
      throw new Error('‚ùå √âchec de la connexion SMTP');
    }
    console.log();

    // 3. Demander l'email de destination pour le test
    const testEmail = process.env.GMAIL_USER; // Utiliser l'email Gmail configur√©
    console.log(`3Ô∏è‚É£ Envoi d'un email de test √†: ${testEmail}`);

    // 4. Test d'email simple
    console.log('üìß Test 1: Email simple...');
    await sendEmail({
      to: testEmail,
      subject: 'üß™ Test SMTP - Email Simple',
      text: 'Ceci est un test d\'email simple depuis votre configuration SMTP Gmail.',
      html: `
        <div style="font-family: Arial, sans-serif; padding: 20px;">
          <h2 style="color: #28a745;">‚úÖ Test SMTP r√©ussi !</h2>
          <p>Ceci est un email de test depuis votre configuration SMTP Gmail.</p>
          <p><strong>Configuration test√©e :</strong></p>
          <ul>
            <li>Host: smtp.gmail.com</li>
            <li>Port: 587 (TLS)</li>
            <li>Utilisateur: ${process.env.GMAIL_USER}</li>
          </ul>
          <p>Si vous recevez cet email, votre configuration fonctionne parfaitement ! üéâ</p>
        </div>
      `
    });
    console.log('‚úÖ Email simple envoy√© avec succ√®s\n');

    // 5. Test des templates
    console.log('üìß Test 2: Template de v√©rification d\'email...');
    const verificationTemplate = emailTemplates.emailVerification('123456', 'John');
    await sendEmail({
      to: testEmail,
      ...verificationTemplate
    });
    console.log('‚úÖ Template de v√©rification envoy√© avec succ√®s\n');

    console.log('üìß Test 3: Template de r√©initialisation de mot de passe...');
    const resetTemplate = emailTemplates.passwordReset('789012', 'John');
    await sendEmail({
      to: testEmail,
      ...resetTemplate
    });
    console.log('‚úÖ Template de r√©initialisation envoy√© avec succ√®s\n');

    console.log('üìß Test 4: Template de bienvenue...');
    const welcomeTemplate = emailTemplates.welcome('John', 'freelance');
    await sendEmail({
      to: testEmail,
      ...welcomeTemplate
    });
    console.log('‚úÖ Template de bienvenue envoy√© avec succ√®s\n');

    // 6. R√©sum√© des tests
    console.log('üéâ TOUS LES TESTS SMTP ONT R√âUSSI !');
    console.log('üìã R√©sum√© :');
    console.log('   ‚úÖ Variables d\'environnement configur√©es');
    console.log('   ‚úÖ Connexion SMTP √©tablie');
    console.log('   ‚úÖ Email simple envoy√©');
    console.log('   ‚úÖ Template de v√©rification d\'email test√©');
    console.log('   ‚úÖ Template de r√©initialisation test√©');
    console.log('   ‚úÖ Template de bienvenue test√©');
    console.log();
    console.log('üì¨ V√©rifiez votre bo√Æte de r√©ception Gmail pour voir les emails de test.');

  } catch (error) {
    console.error('üí• ERREUR LORS DU TEST SMTP:', error);
    console.log('\nüîß CONSEILS DE D√âPANNAGE :');
    console.log('1. V√©rifiez vos variables d\'environnement dans le fichier .env');
    console.log('2. Assurez-vous d\'utiliser un "Mot de passe d\'application" Gmail, pas votre mot de passe normal');
    console.log('3. Activez l\'authentification √† 2 facteurs sur votre compte Gmail');
    console.log('4. G√©n√©rez un mot de passe d\'application depuis : https://myaccount.google.com/apppasswords');
    console.log('5. V√©rifiez que votre compte Gmail autorise les applications moins s√©curis√©es (si n√©cessaire)');
    
    process.exit(1);
  }
}

/**
 * Test rapide de connexion seulement
 */
async function testConnectionOnly() {
  console.log('üîç Test rapide de connexion SMTP...\n');
  
  try {
    const connectionOk = await verifySmtpConnection();
    
    if (connectionOk) {
      console.log('üéâ Connexion SMTP OK ! Vous pouvez maintenant envoyer des emails.');
    } else {
      console.log('‚ùå Probl√®me de connexion SMTP. V√©rifiez votre configuration.');
    }
  } catch (error) {
    console.error('üí• Erreur de connexion:', error);
  }
}

// Fonction principale
async function main() {
  const args = process.argv.slice(2);
  const command = args[0];

  switch (command) {
    case 'connection':
    case 'conn':
      await testConnectionOnly();
      break;
    
    case 'full':
    case 'test':
    default:
      await testSmtpConnection();
      break;
  }
}

// Ex√©cuter le script
if (require.main === module) {
  main().catch(console.error);
}

export { testSmtpConnection, testConnectionOnly };
